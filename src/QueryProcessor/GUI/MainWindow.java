/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QueryProcessor.GUI;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.List;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import org.json.JSONArray;

/**
 *
 * @author jaam
 */
public class MainWindow extends JFrame implements Observer, Runnable {

    private int numScripts;
    private int numTabs;

    private TextAnalysis textAnalizer;
    private ArrayList<JTextPane> paneList;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();

        this.paneList = new ArrayList<>();
        paneList.add(scriptTxtPane);
        numScripts = 1;
        numTabs = 0;

        this.setResizable(false);
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        schemasTree = new javax.swing.JTree();
        executePortionBtn = new javax.swing.JButton();
        executeAllBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        scriptTxtPane = new javax.swing.JTextPane();
        newSQLFileBtn = new javax.swing.JButton();
        saveFileBtn = new javax.swing.JButton();
        closeScriptTabBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        schemasTree.setModel(new FileSystemModel(new File("/home/jaam")));
        jScrollPane1.setViewportView(schemasTree);

        executePortionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QueryProcessor/GUI/images/runportion.png"))); // NOI18N
        executePortionBtn.setToolTipText("Execute the selected portion of the script");
        executePortionBtn.setContentAreaFilled(false);
        executePortionBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                executePortionBtnMouseClicked(evt);
            }
        });

        executeAllBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QueryProcessor/GUI/images/runall.png"))); // NOI18N
        executeAllBtn.setToolTipText("Execute everthing in the script");
        executeAllBtn.setContentAreaFilled(false);
        executeAllBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                executeAllBtnMouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        scriptTxtPane.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jScrollPane2.setViewportView(scriptTxtPane);

        jTabbedPane1.addTab("urSQL File 1", jScrollPane2);

        newSQLFileBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QueryProcessor/GUI/images/plus.png"))); // NOI18N
        newSQLFileBtn.setToolTipText("add new urSQL File");
        newSQLFileBtn.setContentAreaFilled(false);
        newSQLFileBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newSQLFileBtnMouseClicked(evt);
            }
        });

        saveFileBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QueryProcessor/GUI/images/save.png"))); // NOI18N
        saveFileBtn.setToolTipText("save urSQL File");
        saveFileBtn.setContentAreaFilled(false);
        saveFileBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveFileBtnMouseClicked(evt);
            }
        });

        closeScriptTabBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/QueryProcessor/GUI/images/closetab.png"))); // NOI18N
        closeScriptTabBtn.setToolTipText("close selected urSQL File");
        closeScriptTabBtn.setContentAreaFilled(false);
        closeScriptTabBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeScriptTabBtnMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("Status:");

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(executePortionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(executeAllBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newSQLFileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveFileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeScriptTabBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(executePortionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(executeAllBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(newSQLFileBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(saveFileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(closeScriptTabBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void executePortionBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_executePortionBtnMouseClicked
        // TODO add your handling code here:
        String tempText = scriptTxtPane.getSelectedText();

        if (tempText != null) {
            try {
                //System.out.println(tempText);
                Connector conn = new Connector(8080);
                String out = conn.sendMessage(tempText);
                //System.out.println(out);
                ResultSetManager nn = new ResultSetManager();
                jTable1.setModel(nn.displayColumns(out));
                jTextField1.setText(nn.displayStatus(out));
            } catch (IOException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_executePortionBtnMouseClicked

    private void executeAllBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_executeAllBtnMouseClicked
        // TODO add your handling code here:
        String tempText = scriptTxtPane.getText();

        if (tempText != null) {
            try {
                //System.out.println(tempText);
                Connector conn = new Connector(8080);
                String out = conn.sendMessage(tempText);
                //System.out.println(out);
                ResultSetManager nn = new ResultSetManager();
                jTable1.setModel(nn.displayColumns(out));
                jTextField1.setText(nn.displayStatus(out));
            } catch (IOException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_executeAllBtnMouseClicked

    private void newSQLFileBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newSQLFileBtnMouseClicked
        // TODO add your handling code here:
        JTextPane newScriptPane = new JTextPane();

        Font font = newScriptPane.getFont();
        float size = font.getSize() + 4.0f;
        newScriptPane.setFont(font.deriveFont(size));

        jTabbedPane1.addTab("urSQL File " + Integer.toString(numScripts += 1), newScriptPane);
        jTabbedPane1.setSelectedIndex(numTabs += 1);

        paneList.add(newScriptPane);
    }//GEN-LAST:event_newSQLFileBtnMouseClicked

    private void closeScriptTabBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeScriptTabBtnMouseClicked
        // TODO add your handling code here:
        Component selectedTab = jTabbedPane1.getSelectedComponent();
        if (selectedTab != null) {
            numTabs -= 1;
            jTabbedPane1.remove(selectedTab);
            int index = jTabbedPane1.getSelectedIndex();
            paneList.remove(index);
        }
    }//GEN-LAST:event_closeScriptTabBtnMouseClicked

    private void saveFileBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveFileBtnMouseClicked
        // TODO add your handling code here:
        JFileChooser saveFile = new JFileChooser();
        //saveFile.showSaveDialog(null);
        int returnVal = saveFile.showSaveDialog(null);

        if (returnVal == JFileChooser.APPROVE_OPTION) {

            BufferedWriter out = null;
            try {

                out = new BufferedWriter(new FileWriter(saveFile.getSelectedFile().getPath() + ".urSQL"));
                out.write(this.scriptTxtPane.getText());

            } catch (IOException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    out.close();
                } catch (IOException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }//GEN-LAST:event_saveFileBtnMouseClicked

    @Override
    public void run() {
        this.setVisible(true);
        textAnalizer = new TextAnalysis();
        textAnalizer.addObserver(this);

        String text = null;

        while (true) {
            JTextPane tempPane = null;
            int textPaneSelected = jTabbedPane1.getSelectedIndex();
            if (textPaneSelected != -1) {
                tempPane = paneList.get(textPaneSelected);
            }

            if (tempPane != null) {
                text = tempPane.getText();
            }

            if (text != null) {

                try {
                    textAnalizer.analizador(text);
                    Thread.sleep(300);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeScriptTabBtn;
    private javax.swing.JButton executeAllBtn;
    private javax.swing.JButton executePortionBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton newSQLFileBtn;
    private javax.swing.JButton saveFileBtn;
    private javax.swing.JTree schemasTree;
    private javax.swing.JTextPane scriptTxtPane;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        updateAux(arg);
    }

    private void updateAux(Object arg) {

        //int compNumb = jTabbedPane1.getComponentCount();
        for (int i = 0; i < paneList.size(); i++) {
            JTextPane paneAux = paneList.get(i);

            if (arg.equals("palabraReservada")) {
                cambiarPalabra(textAnalizer.obtenerInicio(), textAnalizer.obtenerFinal(), new Color(0, 150, 250), paneAux);
            }
            if (arg.equals("palabra1")) {
                cambiarPalabra(textAnalizer.obtenerInicio(), textAnalizer.obtenerFinal(), new Color(242, 153, 0), paneAux);
            }
            if (arg.equals("letraNormal")) {
                cambiarLetra(textAnalizer.obtenerLetra(), paneAux);
            }
        }
    }

    /*
     * Cambia de color una parte del texto mostradae en pantalla
     */
    private void cambiarPalabra(int pInicio, int pFinal, Color pColor, JTextPane pPane) {

        SimpleAttributeSet attrs = new SimpleAttributeSet();
        StyleConstants.setBold(attrs, true);
        StyleConstants.setForeground(attrs, pColor);
        if (pInicio == 0) {
            pPane.getStyledDocument().setCharacterAttributes(pInicio, pFinal + 1, attrs, true);
        } else {
            pPane.getStyledDocument().setCharacterAttributes(pInicio, pFinal, attrs, true);
        }
    }

    /*
     * Cambia de color de un caracter mostradae en pantalla
     */
    private void cambiarLetra(int pLetra, JTextPane pPane) {
        SimpleAttributeSet attrs = new SimpleAttributeSet();
        StyleConstants.setBold(attrs, true);

        pPane.getStyledDocument().setCharacterAttributes(pLetra, pLetra + 1, attrs, true);

    }
}
